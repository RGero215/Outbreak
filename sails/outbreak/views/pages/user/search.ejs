<style>
    .following {
        background-color: black;
        color: white
    }

    .not-following {
        background-color: white;
        color: black
    }

    .healthy {
        background-color: green;
        color: black
    }

    .not-healthy {
        background-color: white;
        color: black
    }

    .positive {
        background-color:red;
        color: black
    }

    .not-positive {
        background-color: white;
        color: black
    }

    .symptoms {
        background-color: yellow;
        color: black
    }

    .no-symptoms {
        background-color: white;
        color: black
    }

</style>

<div>

    <%- partial('../../partials/navbar.ejs') %>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <%- exposeLocalsToBrowser({keys: ['users']}) %>

    <div id="app" style="padding: 16px">
        <div v-for="u in users" style="background-color: white; margin-bottom: 16px;
        padding: 16px"
            v-bind:key="u.id">

            <a :href="'/user/' + u.id">
                {{u.fullName}}
            </a>

                
            <div>
                {{u.emailAddress}}
            </div>

            <div style="display: flex;">
                <div style="margin-top: 16px; margin-right: 8;">
                    <button v-on:click="follow(u)"
                             v-bind:class="u.isFollowing ? 'following' : 'not-following'"
                    >
                    {{u.isFollowing ? 'Unfollow' : 'Follow'}}
                </button>
                </div>
                <!-- healthy -->
                <div style="margin-top: 16px; margin-right: 8;">
                    <button v-on:click="healthy(u)"
                             v-bind:class="u.isHealthy && !u.positive && !u.hasSymptoms ? 'healthy' : 'not-healthy'"
                             disabled>
                    {{u.isHealthy ? 'Healthy' : 'Unhealthy'}}
                </button>
                </div>
                <!-- positive -->
                <div style="margin-top: 16px; margin-right: 8;">
                    <button v-on:click="positive(u)"
                             v-bind:class="u.isPositive ? 'positive' : 'not-positive'"
                             disabled>
                    {{u.isPositive ? 'Positive' : 'Not Positive'}}
                </button>
                </div>
                <!-- symptoms -->
                <div style="margin-top: 16px; margin-right: 8;">
                    <button v-on:click="symptoms(u)"
                             v-bind:class="u.hasSymptoms ? 'symptoms' : 'no-symptoms'"
                             disabled>
                    {{u.hasSymptoms ? 'Symptoms' : 'No Symptoms'}}
                </button>
                </div>
            </div>

        </div>
    </div>

    <script>
        const allUsers = window.SAILS_LOCALS.users

        // allUsers.forEach(u => {
        //     u.isFollowing = false
        // })

        const App = new Vue({
            el: "#app",
            data: {
                message: "Hello from Vue!",
                users: allUsers
            },
            methods: {
                follow: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.isFollowing) {
                            await axios.post('/unfollow/' + user.id)
                        } else {
                            await axios.post('/follow/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.isFollowing = !user.isFollowing
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                },
                healthy: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.isHealthy) {
                            await axios.post('/unhealthy/' + user.id)
                        } else {
                            await axios.post('/healthy/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.isHealthy = !user.isHealthy
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                },

                positive: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.isPositive) {
                            await axios.post('/notpositive/' + user.id)
                        } else {
                            await axios.post('/positive/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.isPositive = !user.isPositive
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                },

                symptoms: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.hasSymptoms) {
                            await axios.post('/nosymptoms/' + user.id)
                        } else {
                            await axios.post('/symptoms/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.hasSymptoms = !user.hasSymptoms
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                },

            }
        })
    </script>

</div>