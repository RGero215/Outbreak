<style>
    [v-cloak] { display:none; }

    .center-cropped {
        object-position: center; /* Center the image within the element */
        object-fit: cover;
        width: 64px;
        height: 64px;
        border-radius: 100px;
        border: solid 1px rgb(94, 94, 94);
    }

    .blue-button {
        background-color: dodgerblue
    }

    .disabled-button {
        background-color: rgb(201, 201, 201)
    }

    .form-item-label {
        font-size: 15px; font-weight: bold; margin-right: 16px; 
        width: 140px; text-align: right
    }

    .save-button {
        flex: 1; width: 100%; 
        color: white; font-weight: bold;
        padding: 8px; border: solid; border-radius: 5px; font-size: 16px
    }

    .buttons-wrapper {
        flex: 1; width: 100%;
    }

    .form-item {
        display: flex; align-items: center; margin-bottom: 16px
    }

    .fullname-input {
        font-size: 14px; padding: 8px; border-radius: 5px; 
        border: solid 1px rgb(206, 206, 206)
    }
    .healthy {
        background-color: green;
        color: black;
        padding: 8px; border: solid 1px gray; border-radius: 5px; font-size: 16px;
        width: 200;
    }

    .not-healthy {
        background-color: white;
        color: black;
        padding: 8px; border: solid 1px gray; border-radius: 5px; font-size: 16px;
        width: 200;
    }

    .positive {
        background-color:red;
        color: black;
        padding: 8px; border: solid 1px gray; border-radius: 5px; font-size: 16px;
        width: 200;
    }

    .not-positive {
        background-color: white;
        color: black;
        padding: 8px; border: solid 1px gray; border-radius: 5px; font-size: 16px;
        width: 200;
    }

    .symptoms {
        background-color: yellow;
        color: black;
        padding: 8px; border: solid 1px gray; border-radius: 5px; font-size: 16px;
        width: 200;
    }

    .no-symptoms {
        background-color: white;
        color: black;
        padding: 8px; border: solid 1px gray; border-radius: 5px; font-size: 16px;
        width: 200;
    }
    
</style>

<div>

    <%- exposeLocalsToBrowser({keys: ['user']}) %>

    <%- partial('../../partials/navbar.ejs') %>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <div id="app" style="padding: 24px">

        <!-- ACCOUNT SETTINGS -->
        <div style="margin-bottom: 8px; padding: 16px;
            background-color: white">
            <div style="font-weight: bold">
                Account Settings
            </div>

            <div style="background-color: white; padding: 16px">

                <div class="form-item">
                    <div class='form-item-label'>
                        Email address:
                    </div>
                    <div style="font-size: 14px">
                        {{user.emailAddress}}
                    </div>
                </div>

                <div  class="form-item">
                    <div class='form-item-label'>
                        Full name:
                    </div>
                    <input type="text" v-model="user.fullName"
                        class="fullname-input">
                </div>

                <div class="form-item">
                    <div class='form-item-label'>
                        Bio:
                    </div>
                    <div style="font-size: 14px">
                        <textarea v-model="user.bio"
                            style="font-size: 14px; padding: 8px; border-radius: 5px; 
                                width: 300px;
                                border: solid 1px rgb(206, 206, 206)">
                        </textarea>
                    </div>
                </div>

                <div class="form-item">
                    <div class='form-item-label'>
                        Avatar:
                    </div>
                    <div>
                        <img class="center-cropped" 
                            :src="user.profileImageUrl ? user.profileImageUrl : '/images/startup.png'">
                        <div style="margin-top: 12px">
                            <input type="file" v-on:change="handleAvatarChange">
                        </div>
                    </div>
                </div>

                <div class="buttons-wrapper" style="display: flex;">
                    
                    <!-- healthy -->
                    <div style="margin-top: 16px; margin-right: 8;">
                        <button v-on:click="healthy(user)"
                                v-bind:class="user.isHealthy && !user.positive && !user.hasSymptoms ? 'healthy' : 'not-healthy'"
                                >
                            {{user.isHealthy ? 'Healthy' : 'Unhealthy'}}
                        </button>
                    </div>
                    <!-- positive -->
                    <div style="margin-top: 16px; margin-right: 8;">
                        <button v-on:click="positive(user)"
                                v-bind:class="user.isPositive ? 'positive' : 'not-positive'"
                                >
                            {{user.isPositive ? 'Positive' : 'Not Positive'}}
                        </button>
                    </div>
                    <!-- symptoms -->
                    <div style="margin-top: 16px; margin-right: 8;">
                        <button v-on:click="symptoms(user)"
                                v-bind:class="user.hasSymptoms ? 'symptoms' : 'no-symptoms'"
                                >
                            {{user.hasSymptoms ? 'Symptoms' : 'No Symptoms'}}
                        </button>
                    </div>
                    
                </div>

                <button v-on:click="handleSave" :disabled="isSaving"
                    v-bind:class="isSaving ? 'disabled-button save-button' : 'blue-button save-button'">
                    Save
                </button>

                
            </div>
        </div>

        <!-- POSTS -->
        <div style="margin: 16px 0px; font-weight: bold">
            Posts
        </div>
        <div v-for="p in user.posts">
            <%- partial('../../partials/post') %>
        </div>

    </div>

    <script>
        const user = window.SAILS_LOCALS.user
        user.profileImageUrl = user.profileImageUrl ? user.profileImageUrl : '/images/virus.png'
        const app = new Vue({
            el: "#app",
            data: {
                user: user,
                isSaving: false,
                avatarFile: null,
            },
            methods: {
                handleSave: async function() {
                    console.log(this.user.fullName)

                    const formData = new FormData()
                    formData.append('fullName', this.user.fullName)
                    formData.append('bio', this.user.bio)
                    formData.append('imagefile', this.avatarFile)
                    // fire off a post request to update user
                    try {
                        await axios.post('/profile', formData)
                    } catch (err) {
                        console.error(err.toString())
                    }
                },
                handleAvatarChange: function(event) {
                    this.avatarFile = event.target.files[0]
                    this.user.profileImageUrl = window.URL.createObjectURL(this.avatarFile)
                },
                healthy: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.isHealthy) {
                            await axios.post('/unhealthy/' + user.id)
                        } else {
                            await axios.post('/healthy/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.isHealthy = !user.isHealthy
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                },

                positive: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.isPositive) {
                            await axios.post('/notpositive/' + user.id)
                        } else {
                            await axios.post('/positive/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.isPositive = !user.isPositive
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                },

                symptoms: async function(user) {
                    // make sure to use a try catch for any errors that can occur on requests
                    try {
                        if (user.hasSymptoms) {
                            await axios.post('/nosymptoms/' + user.id)
                        } else {
                            await axios.post('/symptoms/' + user.id)
                        }

                        const originalId = user.id
                        user.id = "TEMP"
                        user.hasSymptoms = !user.hasSymptoms
                        user.id = originalId
                    } catch (err) {
                        console.error(err.toString())
                    }
                    
                },
            }
        })
    </script>

</div>